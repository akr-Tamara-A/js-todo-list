{"version":3,"sources":["components/Header/Header.jsx","components/Input/Input.jsx","components/Button/Button.jsx","components/TodoList/TodoList.jsx","components/Checkbox/Checkbox.jsx","components/TodoItem/TodoItem.jsx","utils/utils.js","components/Section/Section.jsx","components/Footer/Footer.jsx","components/Popup/PopupWithForm.jsx","components/App/App.js","serviceWorker.js","index.js"],"names":["Header","className","Input","props","type","name","placeholder","onChange","value","Button","onClick","disabled","title","text","children","TodoList","Checkbox","label","checked","TodoItem","React","useState","isChecked","setIsChecked","useEffect","id","handleCheckbox","hasLabel","date","handleTodoEdit","width","height","viewBox","fill","xmlns","d","handleTodoDublicate","handleTodoDelete","y","transform","x","formatTime","time","Intl","DateTimeFormat","year","month","day","hour","minute","format","Section","todos","setTodos","todosForRender","setTodosForRender","inputValue","setInputValue","buttonValue","setButtonValue","selectedTodoId","setSelectedTodoId","checkDoneTodos","setCheckDoneTodos","checkNotDoneTodos","setCheckNotDoneTodos","clearForm","Date","now","localStorage","setItem","JSON","stringify","newTodos","todo","push","booleen","toConfirm","handleCheckOfTodo","getItem","parse","filterTodos","fromConfirm","onSubmit","event","console","log","preventDefault","target","map","key","Footer","PopupWithForm","isOpen","onCLickYes","onCLickNo","App","popupIsOpened","setPopupIsOpened","todoIsDone","setTodoIsDone","todoInfo","setTodoInfo","handlePopupClose","e","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.37801221.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './Header.css';\r\n\r\nexport default function Header() {\r\n  return (\r\n    <header className=\"header\">\r\n      <h1 className=\"header__title\">Todo List</h1>\r\n    </header>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport './Input.css';\r\n\r\nexport default function Input(props) {\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      name=\"todo\"\r\n      className=\"todos__input\"\r\n      placeholder={props.placeholder}\r\n      onChange={props.onChange}\r\n      value={props.value}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport './Button.css';\r\n\r\nexport default function Button(props) {\r\n  return (\r\n    <button \r\n      className={`button ${props.className}`} \r\n      onClick={props.onClick} \r\n      disabled={props.disabled} \r\n      title={props.title} \r\n      type={props.type}>\r\n        {props.text}\r\n        {props.children}\r\n    </button>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport './TodoList.css';\r\n\r\nexport default function TodoList(props) {\r\n  return (\r\n    <ul className=\"todos__list\">\r\n      {props.children}\r\n    </ul>\r\n  )\r\n}","import React from \"react\";\r\nimport \"./Checkbox.css\";\r\n\r\nexport default function Checkbox(props) {\r\n  return (\r\n    <label className={`todos__label ${props.label ? 'todos__label_left' : 'todos__label_right'}`} title={props.title}>\r\n      {props.label}\r\n      <input\r\n        type=\"checkbox\"\r\n        onChange={props.onChange}\r\n        checked={props.checked}\r\n        className=\"todos__checkbox\"\r\n      />\r\n      <span className={`\r\n          todos__styledCheckbox \r\n          ${props.label ? 'todos__styledCheckbox_right' : 'todos__styledCheckbox_left'} \r\n          ${props.type === 'forTodo' ? 'todos__styledCheckbox_todo' : 'todos__styledCheckbox_filter'}\r\n          `} />\r\n    </label>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./TodoItem.css\";\r\nimport Button from \"../Button/Button\";\r\nimport Checkbox from \"../Checkbox/Checkbox.jsx\";\r\n\r\nexport default function TodoItem(props) {\r\n  const [isChecked, setIsChecked] = React.useState(props.isChecked);\r\n\r\n  React.useEffect(() => {\r\n    //console.log(props.isChecked);\r\n    setIsChecked(props.isChecked);\r\n  }, [props.isChecked, setIsChecked]);\r\n\r\n  function handleTodoEdit() {\r\n    props.handleTodoEdit(props.text, props.id);\r\n  }\r\n\r\n  function handleTodoDublicate() {\r\n    props.handleTodoDublicate(props.text);\r\n  }\r\n\r\n  function handleTodoDelete() {\r\n    props.handleTodoDelete(props.id);\r\n  }\r\n\r\n  function handleCheckbox() {\r\n    props.handleCheckbox(!isChecked, props.id, props.text);\r\n  }\r\n\r\n  return (\r\n    <li className=\"todo\" id={props.id}>\r\n      <Checkbox onChange={handleCheckbox} checked={isChecked} hasLabel={false} type=\"forTodo\" title=\"Отметить выполненое\" />\r\n      <p\r\n        className={`todo__text ${\r\n          props.isChecked ? \"todo__text_type_checked\" : null\r\n        }`}\r\n      >\r\n        {props.text}\r\n      </p>\r\n      <p className=\"todo__date\">{props.date}</p>\r\n      <Button\r\n        className=\"button_type_icon todo__btn_type_edit\"\r\n        onClick={handleTodoEdit}\r\n        disabled={isChecked}\r\n        title=\"Редактировать\"\r\n        type=\"button\"\r\n      >\r\n        <svg\r\n          width=\"24\"\r\n          height=\"23\"\r\n          viewBox=\"0 0 24 23\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path\r\n            d=\"M18.4246 21.5861H1.02206V4.8663H10.7842V3.8623H0.0180664V22.5901H19.4285V12.1687H18.4246V21.5861Z\"\r\n            fill=\"white\"\r\n          />\r\n          <path\r\n            d=\"M22.0657 1.43924L21.5771 0.953979C20.9658 0.343135 20.137 0 19.2729 0C18.4088 0 17.58 0.343135 16.9687 0.953979L8.53857 9.38415V14.4777H13.6355L22.0657 6.04756C22.6757 5.43589 23.0183 4.60727 23.0183 3.7434C23.0183 2.87953 22.6757 2.05091 22.0657 1.43924ZM13.2205 13.4871H9.53922V9.80583L16.7144 2.6273L20.3957 6.30859L13.2205 13.4871ZM21.3562 5.33807L21.1018 5.59242L17.4205 1.91112L17.6749 1.65677C18.0977 1.23497 18.6706 0.998085 19.2679 0.998085C19.8652 0.998085 20.438 1.23497 20.8609 1.65677L21.3495 2.14538C21.5598 2.35445 21.7268 2.60293 21.841 2.87661C21.9552 3.15029 22.0143 3.4438 22.0149 3.74034C22.0155 4.03688 21.9576 4.33063 21.8446 4.60479C21.7316 4.87895 21.5656 5.12813 21.3562 5.33807Z\"\r\n            fill=\"white\"\r\n          />\r\n        </svg>\r\n      </Button>\r\n      <Button\r\n        className=\"button_type_icon todo__btn_type_duplicate\"\r\n        onClick={handleTodoDublicate}\r\n        title=\"Дублировать\"\r\n        type=\"button\"\r\n      >\r\n        <svg\r\n          width=\"25\"\r\n          height=\"25\"\r\n          viewBox=\"0 0 25 25\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path\r\n            d=\"M16.0066 12.2745V3.73211C16.0066 1.65872 14.3479 0 12.2745 0H3.73211C1.65872 0 0 1.65872 0 3.73211V12.2745C0 14.3479 1.65872 16.0066 3.73211 16.0066H12.2745C14.3479 16.0066 16.0066 14.3479 16.0066 12.2745ZM0.870825 12.2745V3.73211C0.870825 2.11486 2.15633 0.829358 3.77358 0.829358H12.316C13.9332 0.829358 15.2187 2.11486 15.2187 3.73211V12.2745C15.2187 13.8917 13.9332 15.1773 12.316 15.1773H3.73211C2.15633 15.1773 0.829358 13.8917 0.870825 12.2745Z\"\r\n            fill=\"white\"\r\n          />\r\n          <path\r\n            d=\"M12.0256 24.3001H20.568C22.6414 24.3001 24.3001 22.6414 24.3001 20.568V12.0256C24.3001 9.95217 22.6414 8.29346 20.568 8.29346H19.3239V9.12282H20.568C22.1852 9.12282 23.4707 10.4083 23.4707 12.0256V20.568C23.4707 22.1852 22.1852 23.4707 20.568 23.4707H12.0256C10.4083 23.4707 9.12282 22.1852 9.12282 20.568V19.3239H8.29346V20.568C8.29346 22.5999 9.95217 24.3001 12.0256 24.3001Z\"\r\n            fill=\"white\"\r\n          />\r\n        </svg>\r\n      </Button>\r\n      <Button\r\n        className=\"button_type_icon todo__btn_type_delete\"\r\n        onClick={handleTodoDelete}\r\n        disabled={isChecked}\r\n        title=\"Удалить\"\r\n        type=\"button\"\r\n      >\r\n        <svg\r\n          width=\"18\"\r\n          height=\"17\"\r\n          viewBox=\"0 0 18 17\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <rect\r\n            y=\"16.2637\"\r\n            width=\"23\"\r\n            height=\"1\"\r\n            transform=\"rotate(-45 0 16.2637)\"\r\n            fill=\"white\"\r\n          />\r\n          <rect\r\n            x=\"1\"\r\n            width=\"23\"\r\n            height=\"1\"\r\n            transform=\"rotate(45 1 0)\"\r\n            fill=\"white\"\r\n          />\r\n        </svg>\r\n      </Button>\r\n    </li>\r\n  );\r\n}\r\n","export const getTimePassed = (date) => {\r\n  const diff = Date.now() - date.getTime();\r\n  return diff;\r\n};\r\n\r\n// limit in hours!\r\n/** Возвращает true если время превышено. limitHours указано в часах */\r\nexport const isTimeExceeded = (date, limitHours) => {\r\n  const interval = Date.now() - date.getTime();\r\n  const limitTransform = limitHours * (1000 * 60 * 60);\r\n  if ( interval > limitTransform ) return;\r\n};\r\n\r\n/** Форматирование времени */\r\nexport const formatTime = (time) => {\r\n  const formatter = new Intl.DateTimeFormat(\"ru\", {\r\n    year: \"numeric\",\r\n    month: \"long\",\r\n    day: \"numeric\",\r\n    hour: \"numeric\",\r\n    minute: \"numeric\",\r\n  });\r\n  return formatter.format(time);\r\n}","import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport \"./Section.css\";\r\nimport Input from \"../Input/Input\";\r\nimport Button from \"../Button/Button\";\r\nimport TodoList from \"../TodoList/TodoList\";\r\nimport TodoItem from \"../TodoItem/TodoItem\";\r\nimport Checkbox from \"../Checkbox/Checkbox.jsx\";\r\nimport { formatTime } from \"../../utils/utils\";\r\n\r\n\r\n/** Компонет \"Секция\" */\r\nexport default function Section(props) {\r\n  const [todos, setTodos] = useState([]);\r\n  const [todosForRender, setTodosForRender] = useState(todos);\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [buttonValue, setButtonValue] = useState('Добавить');\r\n  const [selectedTodoId, setSelectedTodoId] = useState('');\r\n  const [checkDoneTodos, setCheckDoneTodos] = useState(true);\r\n  const [checkNotDoneTodos, setCheckNotDoneTodos] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if(localStorage.getItem('todos')) {\r\n      setTodos(JSON.parse(localStorage.getItem('todos')));\r\n    }\r\n  }, [])\r\n\r\n  /** Проверка перерендеринга */\r\n  useEffect(() => {\r\n    filterTodos();\r\n  }, [todos, checkDoneTodos, checkNotDoneTodos]);\r\n\r\n\r\n  useEffect(() => {\r\n    if (props.fromConfirm.booleen) {\r\n      handleCheckOfTodo(props.fromConfirm.booleen, props.fromConfirm.id, props.fromConfirm.text);\r\n    }\r\n  }, [props.fromConfirm])\r\n\r\n  /** Получение значение инпута */\r\n  function handleInputChange(event) {\r\n    setInputValue(event.target.value);\r\n  }\r\n  \r\n  /** Обработка сабмита формы */\r\n  function handleFormSubmit(event) {\r\n    if (buttonValue === 'Добавить') {\r\n      console.log(new Date())\r\n      setTodos([{id: Date.now(), text: inputValue, isChecked: false, date: formatTime(new Date())}, ...todos]);\r\n      clearForm();\r\n      localStorage.setItem('todos', JSON.stringify(todos));\r\n      event.preventDefault();\r\n    } else if (buttonValue === 'Сохранить') {\r\n      let newTodos = [];\r\n      for (let todo of todos) {\r\n        if (todo.id !== selectedTodoId) {\r\n          newTodos.push(todo);\r\n        } else {\r\n          console.log(todo);\r\n          console.log(todo.date);\r\n          newTodos.push({id: selectedTodoId, text: inputValue, isChecked: false, date: todo.date});\r\n        }\r\n      };\r\n      setTodos(newTodos);\r\n      localStorage.setItem('todos', JSON.stringify(todos));\r\n      clearForm();\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  /** Очистка формы */\r\n  function clearForm() {\r\n    setButtonValue('Добавить');\r\n    setInputValue('');\r\n  }\r\n\r\n  /** Обработка редактирования todo */\r\n  function handleTodoEdit(text, id) {\r\n    setSelectedTodoId(id);\r\n    setInputValue(text);\r\n    setButtonValue('Сохранить');\r\n  }\r\n\r\n  /** Обработка копирования todo */\r\n  function handleTodoDublicate(text) {\r\n    setTodos([{id: Date.now(), text: text, isChecked: false, date: formatTime(new Date())}, ...todos]);\r\n    clearForm();\r\n    localStorage.setItem('todos', JSON.stringify(todos));\r\n    setCheckNotDoneTodos(true);\r\n  }\r\n  \r\n  /** Обработка удаления todo */\r\n  function handleTodoDelete(id) {\r\n    clearForm();\r\n    let newTodos = [];\r\n    for (let todo of todos) {\r\n      if(todo.id !== id) {\r\n        newTodos.push(todo);\r\n      };\r\n    };\r\n    setTodos(newTodos);\r\n    localStorage.setItem('todos', JSON.stringify(todos));\r\n  };\r\n\r\n  /** Обработка чека в todo */\r\n  function handleCheckbox(booleen, id, text) {\r\n    if (booleen) {\r\n      props.toConfirm(booleen, id, text);\r\n    } else {\r\n      handleCheckOfTodo(booleen, id, text);\r\n    }\r\n  };\r\n  \r\n   /** Передача в список todos результата чекбокса */\r\n  function handleCheckOfTodo(booleen, id, text) {\r\n    let newTodos = [];\r\n    for (let todo of todos) {\r\n      if (todo.id !== id) {\r\n        newTodos.push(todo);\r\n      } else {\r\n        newTodos.push({id: id, text: text, isChecked: booleen, date: todo.date});\r\n      }\r\n    };\r\n    setTodos(newTodos);\r\n    localStorage.setItem('todos', JSON.stringify(todos));\r\n  };\r\n\r\n  /** Обработка чека выполненных todo */\r\n  function handleCheckDoneTodos() {\r\n    setCheckDoneTodos(!checkDoneTodos);\r\n  }\r\n  \r\n  /** Обработка чека невыполненных todo */\r\n  function handleCheckNotDoneTodos() {\r\n    setCheckNotDoneTodos(!checkNotDoneTodos);\r\n  }\r\n\r\n  /** Фильтрация списка todo в зависимости от выбранных чекбоксов */\r\n  function filterTodos() {\r\n    let newTodos = [];\r\n    if (checkDoneTodos && checkNotDoneTodos) {\r\n      for (let todo of todos) {\r\n        newTodos.push(todo);\r\n      };\r\n    } else if (checkDoneTodos && !checkNotDoneTodos) {\r\n      for (let todo of todos) {\r\n        if (todo.isChecked) {\r\n          newTodos.push(todo);\r\n        };\r\n      };\r\n    } else if (!checkDoneTodos && checkNotDoneTodos) {\r\n      for (let todo of todos) {\r\n        if (!todo.isChecked) {\r\n          newTodos.push(todo);\r\n        };\r\n      };\r\n    }\r\n    setTodosForRender(newTodos);\r\n    localStorage.setItem('todos', JSON.stringify(todos));\r\n  }\r\n\r\n\r\n  /** Отрисовка компонента */\r\n  return (\r\n    <section className=\"todos\">\r\n      <form className=\"todos__form\">\r\n        <div className=\"todos__fieldset\">\r\n          <span className=\"todos__legend\">Вывести на экран:</span>\r\n          <Checkbox\r\n            onChange={handleCheckNotDoneTodos}\r\n            checked={checkNotDoneTodos}\r\n            label=\"Не выполненные\"\r\n            type=\"forFilter\"\r\n          />\r\n          <Checkbox\r\n            onChange={handleCheckDoneTodos}\r\n            checked={checkDoneTodos}\r\n            label=\"Выполненные\"\r\n            type=\"forFilter\"\r\n          />\r\n        </div>\r\n      </form>\r\n      <form\r\n        name=\"todo-form\"\r\n        className=\"todos__form\"\r\n        onSubmit={handleFormSubmit}\r\n      >\r\n        <Input\r\n          placeholder=\"Следующее дело...\"\r\n          onChange={handleInputChange}\r\n          value={inputValue}\r\n        />\r\n        <Button\r\n          className=\"button_type_submit button_style_success\"\r\n          text={buttonValue}\r\n          type=\"submit\"\r\n        />\r\n      </form>\r\n\r\n        <TodoList>\r\n          {todosForRender.map((todo) => {\r\n            return (\r\n              <TodoItem\r\n                key={todo.id}\r\n                text={todo.text}\r\n                date={todo.date}\r\n                id={todo.id}\r\n                isChecked={todo.isChecked}\r\n                handleCheckbox={handleCheckbox}\r\n                handleTodoEdit={handleTodoEdit}\r\n                handleTodoDublicate={handleTodoDublicate}\r\n                handleTodoDelete={handleTodoDelete}\r\n              />\r\n            );\r\n          })}\r\n        </TodoList>\r\n\r\n    </section>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport './Footer.css';\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <p className=\"footer__title\">© Yandex.Praktikum 2020</p>\r\n    </footer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./Popup.css\";\r\nimport Button from \"../Button/Button\";\r\n\r\n/** Компонент попап */\r\nexport default function PopupWithForm(props) {\r\n\r\n  return (\r\n    <div className={`popup ${props.isOpen ? \"popup_opened\" : \"popup_closed\"}`}>\r\n      <form className=\"popup__form\" onSubmit={props.onCLickYes} >\r\n        <p className=\"popup__title\">{props.text}</p>\r\n        <Button \r\n          className=\"button_type_submit button_style_success\" \r\n          text=\"Подтвердить\" \r\n          type=\"submit\"/>\r\n        <Button \r\n          className=\"button_type_submit button_style_refuse\" \r\n          text=\"Еще нет\" onClick={props.onCLickNo} \r\n          type=\"button\"/>\r\n      </form>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\nimport \"./App.css\";\nimport Header from \"../Header/Header\";\nimport Section from \"../Section/Section\";\nimport Footer from \"../Footer/Footer\";\nimport PopupWithForm from \"../Popup/PopupWithForm\";\n\nfunction App() {  \n  const [popupIsOpened, setPopupIsOpened] = React.useState(false);\n  const [todoIsDone, setTodoIsDone] = React.useState(false);\n  const [todoInfo, setTodoInfo] = React.useState({});\n\n  React.useEffect(() => {\n    if (!popupIsOpened) {\n      clearData();\n    }\n  }, [popupIsOpened]);\n\n  /** Обработка подтверждения */\n  function handlePopupYes(e) {\n    setTodoIsDone(true);\n    handlePopupClose();\n    e.preventDefault();\n  }\n  \n  /** Обработка отрицания */\n  function handlePopupNo() {\n    setTodoIsDone(false);\n    handlePopupClose();\n  }\n  \n  /** Закрытие попапа */\n  function handlePopupClose() {\n    setPopupIsOpened(!popupIsOpened);\n    //clearData();\n  }\n\n  /** Запрос на подтверждение */\n  function toConfirm(booleen, id, text) {\n    setPopupIsOpened(booleen);\n    setTodoInfo({id: id, text: text});\n  }\n\n  /** Очистка данных*/\n  function clearData() {\n    setTodoInfo({id: '', text: ''});\n    setTodoIsDone(false);\n  }\n\n  return (\n    <div className=\"page__content\">\n      <Header />\n      <Section toConfirm={toConfirm} fromConfirm={{booleen: todoIsDone, id: todoInfo.id, text: todoInfo.text}} />\n      <Footer />\n      <PopupWithForm isOpen={popupIsOpened} onCLickYes={handlePopupYes} onCLickNo={handlePopupNo} text=\"А точно сделали?\"/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}